{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dsa-Tracker-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Lister from \"./components/Lister\";\nimport Questions from \"./components/Questions\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Link, Routes, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport Completer from \"./components/Completer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState(\"light\");\n  const [Checked12, setChecked12] = useState([]);\n  const [Checked1, setChecked1] = useState([]);\n  const [Checked2, setChecked2] = useState([]);\n  const [Checked3, setChecked3] = useState([]);\n  const [Checked4, setChecked4] = useState([]);\n  const [Checked5, setChecked5] = useState([]);\n  const [Checked6, setChecked6] = useState([]);\n  const [Checked7, setChecked7] = useState([]);\n  const [Checked8, setChecked8] = useState([]);\n  const [Checked9, setChecked9] = useState([]);\n  const [Checked10, setChecked10] = useState([]);\n  const [Checked11, setChecked11] = useState([]);\n  const [progress, setprogress] = useState(0);\n  const [Checked13, setChecked13] = useState([]);\n\n  // const [qstate, setqstate] = useState(localStorage.getItem(\"qstate\"));\n\n  //   useEffect(() => {\n  //     localStorage.setItem(\"qstate\", qstate);\n  //   }, [qstate]);\n\n  //   const [qstate2, setqstate2] = useState(localStorage.getItem(\"qstate2\"));\n\n  //   useEffect(() => {\n  //     localStorage.setItem(\"qstate2\", qstate2);\n  //   }, [qstate2]);\n\n  const arrayq = [{\n    ID: \"1\",\n    Q: \"Search in a sorted 2D matrix\",\n    link: \"https://leetcode.com/problems/search-a-2d-matrix/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Grid Unique Paths | Count paths from left-top to the right bottom of a matrix\",\n    link: \"https://leetcode.com/problems/unique-paths/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Two Sum : Check if a pair with given sum exists in Array\",\n    link: \"https://leetcode.com/problems/two-sum/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Longest Consecutive Sequence in an Array\",\n    link: \"https://leetcode.com/problems/longest-consecutive-sequence/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Length of the longest subarray with zero Sum\",\n    link: \"https://practice.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    Q: \"Length of Longest Substring without any Repeating Character\",\n    link: \"https://leetcode.com/problems/longest-substring-without-repeating-characters/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"7\",\n    Q: \"Count the number of subarrays with given xor K\",\n    link: \"https://www.interviewbit.com/problems/subarray-with-given-xor/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"8\",\n    Q: \"Merge Overlapping Sub-intervals\",\n    link: \"https://leetcode.com/problems/merge-intervals/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"9\",\n    Q: \"Merge two Sorted Arrays Without Extra Space\",\n    link: \"https://leetcode.com/problems/merge-sorted-array/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+10\",\n    Q: \"Program to generate Pascal’s Triangle\",\n    link: \"https://leetcode.com/problems/pascals-triangle/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+11\",\n    Q: \"Next_permutation : find next lexicographically greater permutation\",\n    link: \"https://leetcode.com/problems/next-permutation/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+12\",\n    Q: \"Kadane’s Algorithm : Maximum Subarray Sum in an Array\",\n    link: \"https://leetcode.com/problems/maximum-subarray/\",\n    done: \"not\"\n  }, {\n    ID: \"+13\",\n    Q: \"Sort an array of 0s, 1s and 2s\",\n    link: \"https://leetcode.com/problems/sort-colors/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+14\",\n    Q: \"Grid Unique Paths\",\n    link: \"https://leetcode.com/problems/unique-paths/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+15\",\n    Q: \"Reverse Pairs\",\n    link: \"https://leetcode.com/problems/reverse-pairs/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+16\",\n    Q: \"Pow(x,n) : Find X raised to the power N\",\n    link: \"https://leetcode.com/problems/powx-n/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+17\",\n    Q: \"4 Sum problem\",\n    link: \"https://leetcode.com/problems/4sum/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+18\",\n    Q: \"Max consecutive Ones\",\n    link: \"https://leetcode.com/problems/max-consecutive-ones/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+19\",\n    Q: \"Reverse Words in a String\",\n    link: \"https://leetcode.com/problems/reverse-words-in-a-string/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+20\",\n    Q: \"Longest Palindrome in a string\",\n    link: \"https://leetcode.com/problems/longest-palindromic-substring/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+21\",\n    Q: \"Longest Common Prefix\",\n    link: \"https://leetcode.com/problems/longest-common-prefix/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+22\",\n    Q: \"Minimum characters needed to be inserted in the beginning to make it palindromic\",\n    link: \"https://www.codingninjas.com/codestudio/problems/893000?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+23\",\n    Q: \"Check for Anagrams\",\n    link: \"https://leetcode.com/problems/valid-anagram/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const greedyq = [{\n    ID: \"1\",\n    Q: \"N meetings in one room\",\n    link: \"https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Minimum number of platforms required for a railway\",\n    link: \"https://practice.geeksforgeeks.org/problems/minimum-platforms-1587115620/1#\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Job Sequencing Problem\",\n    link: \"https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1#\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Fractional Knapsack Problem\",\n    link: \"https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Find minimum number of coins\",\n    link: \"https://www.geeksforgeeks.org/find-minimum-number-of-coins-that-make-a-change/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const dpq = [{\n    ID: \"1\",\n    Q: \"Maximum Product Subarray in an Array\",\n    link: \"https://leetcode.com/problems/maximum-product-subarray/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Longest Common Subsequence |\",\n    link: \"https://leetcode.com/problems/longest-increasing-subsequence/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"0/1 Knapsack \",\n    link: \"https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Edit Distance\",\n    link: \"https://leetcode.com/problems/edit-distance/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Rod Cutting Problem\",\n    link: \"https://leetcode.com/problems/minimum-cost-to-cut-a-stick/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    Q: \"Subset sum equal to target \",\n    link: \"https://leetcode.com/problems/partition-equal-subset-sum/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"7\",\n    Q: \"Coin Change 2\",\n    link: \"https://leetcode.com/problems/coin-change/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"8\",\n    Q: \"Minimum Path Sum In a Grid\",\n    link: \"https://leetcode.com/problems/minimum-path-sum/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"9\",\n    Q: \"Longest Increasing Subsequence\",\n    link: \"https://leetcode.com/problems/longest-increasing-subsequence/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+10\",\n    Q: \"Maximum sum increasing subsequence\",\n    link: \"https://practice.geeksforgeeks.org/problems/maximum-sum-increasing-subsequence4749/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+11\",\n    Q: \"Matrix Chain Multiplication\",\n    link: \"https://practice.geeksforgeeks.org/problems/matrix-chain-multiplication0303/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+12\",\n    Q: \"Minimum sum path in the matrix, (count paths and similar type do, also backtrack to find the Minimum path)\",\n    link: \"https://leetcode.com/problems/minimum-path-sum/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"+13\",\n    Q: \"Maximum profit in Job scheduling\",\n    link: \"https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const Bsq = [{\n    ID: \"1\",\n    Q: \"Nth Root of a Number using Binary Search\",\n    link: \"https://bit.ly/3rj7Ib1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Search Single Element in a sorted array\",\n    link: \"https://leetcode.com/problems/single-element-in-a-sorted-array/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Search Element in a Rotated Sorted Array\",\n    link: \"https://leetcode.com/problems/search-in-rotated-sorted-array/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Median of Two Sorted Arrays of different sizes\",\n    link: \"https://leetcode.com/problems/median-of-two-sorted-arrays/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"K-th Element of two sorted arrays\",\n    link: \"https://practice.geeksforgeeks.org/problems/k-th-element-of-two-sorted-array1317/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    Q: \"Allocate Minimum Number of Pages\",\n    link: \"https://www.interviewbit.com/problems/allocate-books/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"7\",\n    Q: \"Aggressive Cows\",\n    link: \"https://www.spoj.com/problems/AGGRCOW/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const heapq = [{\n    ID: \"1\",\n    Q: \"Maximum Sum Combination\",\n    link: \"https://www.interviewbit.com/problems/maximum-sum-combinations/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Kth Largest Element\",\n    link: \"https://leetcode.com/problems/kth-largest-element-in-an-array/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Top K frequent elements\",\n    link: \"https://leetcode.com/problems/top-k-frequent-elements/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Merge K sorted arrays\",\n    link: \"https://www.codingninjas.com/codestudio/problems/merge-k-sorted-arrays_975379\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Find Median from Data Stream\",\n    link: \"https://leetcode.com/problems/find-median-from-data-stream/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const recursionq = [{\n    ID: \"1\",\n    Q: \"Subset Sum : Sum of all Subsets\",\n    link: \"https://practice.geeksforgeeks.org/problems/subset-sums2234/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Subset – II | Print all the Unique Subsets\",\n    link: \"https://leetcode.com/problems/subsets-ii/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Combination Sum – 1\",\n    link: \"https://leetcode.com/problems/combination-sum/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Combination Sum II – Find all unique combinations\",\n    link: \"https://leetcode.com/problems/combination-sum-ii/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Palindrome Partitioning\",\n    link: \"https://leetcode.com/problems/palindrome-partitioning/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    Q: \"Find K-th Permutation Sequence\",\n    link: \"https://leetcode.com/problems/permutation-sequence/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const llq = [{\n    ID: \"1\",\n    Q: \"Check if given Linked List is Plaindrome\",\n    link: \"https://leetcode.com/problems/palindrome-linked-list/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Reverse Linked List in groups of Size K\",\n    link: \"https://leetcode.com/problems/reverse-nodes-in-k-group/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Detect a Cycle in a Linked List\",\n    link: \"https://leetcode.com/problems/linked-list-cycle/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Find intersection of Two Linked Lists\",\n    link: \"https://leetcode.com/problems/intersection-of-two-linked-lists/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Starting point of loop in a Linked List\",\n    link: \"https://leetcode.com/problems/linked-list-cycle-ii/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    Q: \"Flattening a Linked List\",\n    link: \"https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"7\",\n    Q: \"Merge two sorted Linked Lists\",\n    link: \"https://leetcode.com/problems/merge-two-sorted-lists/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"8\",\n    Q: \"Remove N-th node from the end of a Linked List\",\n    link: \"https://leetcode.com/problems/remove-nth-node-from-end-of-list/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const Btq = [{\n    ID: \"1\",\n    Q: \"Level Order Traversal of a Binary Tree\",\n    link: \"https://leetcode.com/problems/binary-tree-level-order-traversal/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    link: \"https://leetcode.com/problems/maximum-depth-of-binary-tree/\",\n    Q: \"Maximum depth of a Binary Tree\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    link: \"https://leetcode.com/problems/diameter-of-binary-tree/\",\n    Q: \"Calculate the Diameter of a Binary Tree\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    link: \"https://leetcode.com/problems/balanced-binary-tree/\",\n    Q: \"Check if the Binary Tree is Balanced Binary Tree\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    link: \"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/\",\n    Q: \"Lowest Common Ancestor for two given Nodes\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    link: \"https://leetcode.com/problems/same-tree/\",\n    Q: \"Check if two trees are identical\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"7\",\n    link: \"https://leetcode.com/problems/boundary-of-binary-tree/#\",\n    Q: \"Boundary Traversal of a Binary Tree\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"8\",\n    link: \"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/\",\n    Q: \"Zig Zag Traversal Of Binary Tree\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const Bstq = [{\n    ID: \"1\",\n    Q: \"Size of the largest BST in a Binary Tree\",\n    link: \"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Find a pair with a given sum in BST\",\n    link: \"https://leetcode.com/problems/two-sum-iv-input-is-a-bst/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Populate Next Right pointers of Tree\",\n    link: \"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Find LCA of two nodes in BST\",\n    link: \"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Find the inorder predecessor/successor of a given Key in BST.\",\n    link: \"https://practice.geeksforgeeks.org/problems/predecessor-and-successor/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    Q: \"Kth largest element in Binary Search Tree\",\n    link: \"https://practice.geeksforgeeks.org/problems/kth-largest-element-in-bst/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const Sqtq = [{\n    ID: \"1\",\n    Q: \"Implement Min Stack : O(2N) and O(N) Space Complexity\",\n    link: \"https://leetcode.com/problems/min-stack/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Sliding Window Maximum\",\n    link: \"https://leetcode.com/problems/sliding-window-maximum/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Area of largest rectangle in Histogram\",\n    link: \"https://leetcode.com/problems/largest-rectangle-in-histogram/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Implement LRU Cache\",\n    link: \"https://leetcode.com/problems/lru-cache/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Implement Stack using single Queue\",\n    link: \"https://leetcode.com/problems/implement-stack-using-queues/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    Q: \"Check for Balanced Parentheses\",\n    link: \"https://leetcode.com/problems/valid-parentheses/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"7\",\n    Q: \"Next Greater Element Using Stack\",\n    link: \"https://leetcode.com/problems/next-greater-element-ii/description/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const Backtrackingq = [{\n    ID: \"1\",\n    Q: \"Rat in a Maze\",\n    link: \"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"M – Coloring Problem\",\n    link: \"https://practice.geeksforgeeks.org/problems/m-coloring-problem-1587115620/1#\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Sudoku Solver\",\n    link: \"https://leetcode.com/problems/sudoku-solver/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"N Queen Problem | Return all Distinct Solutions to the N-Queens Puzzle\",\n    link: \"https://leetcode.com/problems/n-queens/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Print All Permutations of a String/Array\",\n    link: \"https://leetcode.com/problems/permutations/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    Q: \"Word Break (print all ways)\",\n    link: \"https://bit.ly/3FxgW92\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const Graphq = [{\n    ID: \"1\",\n    Q: \"Detect Cycle in an Undirected Graph (using BFS)\",\n    link: \"https://leetcode.com/problems/course-schedule/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"2\",\n    Q: \"Topological Sort (BFS)\",\n    link: \"https://practice.geeksforgeeks.org/problems/topological-sort/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"3\",\n    Q: \"Number of Distinct Islands\",\n    link: \"https://leetcode.com/problems/number-of-islands/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"4\",\n    Q: \"Bipartite Graph \",\n    link: \"https://leetcode.com/problems/is-graph-bipartite/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"5\",\n    Q: \"Detect a Cycle in Directed Graph | Topological Sort | Kahn’s Algorithm \",\n    link: \"https://leetcode.com/problems/course-schedule/\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }, {\n    ID: \"6\",\n    Q: \"Print Shortest Path – Dijkstra’s Algorithm\",\n    link: \"https://practice.geeksforgeeks.org/problems/implementing-dijkstra-set-1-adjacency-matrix/1\",\n    status: \"Incomplete\",\n    done: \"not\"\n  }];\n  const [count, setcount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        mode: mode,\n        setmode: setmode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"\",\n          element: count <= 99 ? /*#__PURE__*/_jsxDEV(Lister, {\n            setprogress: setprogress,\n            progress: progress,\n            Checked12: Checked12,\n            Checked1: Checked1,\n            Checked2: Checked2,\n            Checked3: Checked3,\n            Checked4: Checked4,\n            Checked5: Checked5,\n            Checked6: Checked6,\n            Checked7: Checked7,\n            Checked8: Checked8,\n            Checked9: Checked9,\n            Checked10: Checked10,\n            Checked11: Checked11\n            // Checked10={Checked5}\n            ,\n            count: count,\n            setcount: setcount,\n            name: \"Array\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Completer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Array and string\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked12,\n            no: \"12\",\n            setChecked: setChecked12,\n            mode: mode,\n            qlist: arrayq,\n            name: \"Array\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Greedy\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked1,\n            no: \"1\",\n            setChecked: setChecked1,\n            mode: mode,\n            qlist: greedyq,\n            name: \"Greedy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Dp\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked2,\n            no: \"2\",\n            setChecked: setChecked2,\n            mode: mode,\n            qlist: dpq,\n            name: \"Dp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Binary search\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked3,\n            no: \"3\",\n            setChecked: setChecked3,\n            mode: mode,\n            qlist: Bsq,\n            name: \"Binary Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Heaps\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked4,\n            no: \"4\",\n            setChecked: setChecked4,\n            mode: mode,\n            qlist: heapq,\n            name: \"Heap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Recursion\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked5,\n            no: \"5\",\n            setChecked: setChecked5,\n            mode: mode,\n            qlist: recursionq,\n            name: \"Recursion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Linked list\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked6,\n            no: \"6\",\n            setChecked: setChecked6,\n            mode: mode,\n            qlist: llq,\n            name: \"Linked List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Binary Tree\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked7,\n            no: \"7\",\n            setChecked: setChecked7,\n            mode: mode,\n            qlist: Btq,\n            name: \"Binary Tree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Binary Search Tree\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked8,\n            no: \"8\",\n            setChecked: setChecked8,\n            mode: mode,\n            qlist: Bstq,\n            name: \"Binary Search Tree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Stack and Queue\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked9,\n            no: \"9\",\n            setChecked: setChecked9,\n            mode: mode,\n            qlist: Sqtq,\n            name: \"Stack and Queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Backtracking\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked10,\n            no: \"10\",\n            setChecked: setChecked10,\n            mode: mode,\n            qlist: Backtrackingq,\n            name: \"Backtracking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Graphs\",\n          element: /*#__PURE__*/_jsxDEV(Questions, {\n            Checked: Checked11,\n            no: \"11\",\n            setChecked: setChecked11,\n            mode: mode,\n            qlist: Graphq,\n            name: \"Graphs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"og8dIcLFhGfLpFkIaaJvl0/yGLw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Lister","Questions","Navbar","BrowserRouter","Router","Link","Routes","Route","useState","useEffect","React","Completer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","Checked12","setChecked12","Checked1","setChecked1","Checked2","setChecked2","Checked3","setChecked3","Checked4","setChecked4","Checked5","setChecked5","Checked6","setChecked6","Checked7","setChecked7","Checked8","setChecked8","Checked9","setChecked9","Checked10","setChecked10","Checked11","setChecked11","progress","setprogress","Checked13","setChecked13","arrayq","ID","Q","link","status","done","greedyq","dpq","Bsq","heapq","recursionq","llq","Btq","Bstq","Sqtq","Backtrackingq","Graphq","count","setcount","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","name","Checked","no","setChecked","qlist","_c","$RefreshReg$"],"sources":["D:/Dsa-Tracker-main/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Lister from \"./components/Lister\";\nimport Questions from \"./components/Questions\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Link, Routes, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport Completer from \"./components/Completer\";\nfunction App() {\n\n  const [mode, setmode] = useState(\"light\")\n    \n  const [Checked12, setChecked12] = useState([]);\n  const [Checked1, setChecked1] = useState([]);\n  const [Checked2, setChecked2] = useState([]);\n  const [Checked3, setChecked3] = useState([]);\n  const [Checked4, setChecked4] = useState([]);\n  const [Checked5, setChecked5] = useState([]);\n  const [Checked6, setChecked6] = useState([]);\n  const [Checked7, setChecked7] = useState([]);\n  const [Checked8, setChecked8] = useState([]);\n  const [Checked9, setChecked9] = useState([]);\n  const [Checked10, setChecked10] = useState([]);\n  const [Checked11, setChecked11] = useState([]);\n  const [progress, setprogress] = useState(0);\n  const [Checked13, setChecked13] = useState([]);\n\n// const [qstate, setqstate] = useState(localStorage.getItem(\"qstate\"));\n\n//   useEffect(() => {\n//     localStorage.setItem(\"qstate\", qstate);\n//   }, [qstate]);\n\n//   const [qstate2, setqstate2] = useState(localStorage.getItem(\"qstate2\"));\n\n//   useEffect(() => {\n//     localStorage.setItem(\"qstate2\", qstate2);\n//   }, [qstate2]);\n\n  const arrayq = [\n    {\n      ID: \"1\",\n      Q: \"Search in a sorted 2D matrix\",\n      link: \"https://leetcode.com/problems/search-a-2d-matrix/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      Q: \"Grid Unique Paths | Count paths from left-top to the right bottom of a matrix\",\n      link: \"https://leetcode.com/problems/unique-paths/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"3\",\n      Q: \"Two Sum : Check if a pair with given sum exists in Array\",\n      link: \"https://leetcode.com/problems/two-sum/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"4\",\n      Q: \"Longest Consecutive Sequence in an Array\",\n      link: \"https://leetcode.com/problems/longest-consecutive-sequence/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      Q: \"Length of the longest subarray with zero Sum\",\n      link: \"https://practice.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"6\",\n      Q: \"Length of Longest Substring without any Repeating Character\",\n      link: \"https://leetcode.com/problems/longest-substring-without-repeating-characters/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"7\",\n      Q: \"Count the number of subarrays with given xor K\",\n      link: \"https://www.interviewbit.com/problems/subarray-with-given-xor/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"8\",\n      Q: \"Merge Overlapping Sub-intervals\",\n      link: \"https://leetcode.com/problems/merge-intervals/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"9\",\n      Q: \"Merge two Sorted Arrays Without Extra Space\",\n      link: \"https://leetcode.com/problems/merge-sorted-array/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+10\",\n      Q: \"Program to generate Pascal’s Triangle\",\n      link: \"https://leetcode.com/problems/pascals-triangle/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+11\",\n      Q: \"Next_permutation : find next lexicographically greater permutation\",\n      link: \"https://leetcode.com/problems/next-permutation/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+12\",\n      Q: \"Kadane’s Algorithm : Maximum Subarray Sum in an Array\",\n      link: \"https://leetcode.com/problems/maximum-subarray/\",\n      done: \"not\",\n    },\n    {\n      ID: \"+13\",\n      Q: \"Sort an array of 0s, 1s and 2s\",\n      link: \"https://leetcode.com/problems/sort-colors/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+14\",\n      Q: \"Grid Unique Paths\",\n      link: \"https://leetcode.com/problems/unique-paths/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+15\",\n      Q: \"Reverse Pairs\",\n      link: \"https://leetcode.com/problems/reverse-pairs/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+16\",\n      Q: \"Pow(x,n) : Find X raised to the power N\",\n      link: \"https://leetcode.com/problems/powx-n/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+17\",\n      Q: \"4 Sum problem\",\n      link: \"https://leetcode.com/problems/4sum/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+18\",\n      Q: \"Max consecutive Ones\",\n      link: \"https://leetcode.com/problems/max-consecutive-ones/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+19\",\n      Q: \"Reverse Words in a String\", \n      link:\"https://leetcode.com/problems/reverse-words-in-a-string/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+20\",\n      Q: \"Longest Palindrome in a string\", \n      link:\"https://leetcode.com/problems/longest-palindromic-substring/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+21\",\n      Q: \"Longest Common Prefix\", \n      link:\"https://leetcode.com/problems/longest-common-prefix/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+22\",\n      Q: \"Minimum characters needed to be inserted in the beginning to make it palindromic\", \n      link:\"https://www.codingninjas.com/codestudio/problems/893000?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+23\",\n      Q: \"Check for Anagrams\", \n      link:\"https://leetcode.com/problems/valid-anagram/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n   ];\n\n  const greedyq = [\n    { ID: \"1\", \n    Q: \"N meetings in one room\", \n    link:\"https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1\",\n    status: \"Incomplete\",\n     done: \"not\" },\n    {\n      ID: \"2\",\n      Q: \"Minimum number of platforms required for a railway\",\n      link:\"https://practice.geeksforgeeks.org/problems/minimum-platforms-1587115620/1#\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    { ID: \"3\", \n    Q: \"Job Sequencing Problem\", \n    link:\"https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1#\",\n    status: \"Incomplete\", \n    done: \"not\" },\n    {\n      ID: \"4\",\n      Q: \"Fractional Knapsack Problem\",\n      link:\"https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      Q: \"Find minimum number of coins\",\n      link:\"https://www.geeksforgeeks.org/find-minimum-number-of-coins-that-make-a-change/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\n\n  const dpq = [\n    {\n      ID: \"1\",\n      Q: \"Maximum Product Subarray in an Array\",\n      link:\"https://leetcode.com/problems/maximum-product-subarray/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      Q: \"Longest Common Subsequence |\",\n      link:\"https://leetcode.com/problems/longest-increasing-subsequence/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    { ID: \"3\", \n    Q: \"0/1 Knapsack \", \n    link:\"https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1\",\n    status: \"Incomplete\", \n    done: \"not\" \n  },\n    { ID: \"4\", \n    Q: \"Edit Distance\",\n    link:\"https://leetcode.com/problems/edit-distance/\",\n     status: \"Incomplete\", \n     done: \"not\"\n     },\n    { ID: \"5\", \n    Q: \"Rod Cutting Problem\", \n    link:\"https://leetcode.com/problems/minimum-cost-to-cut-a-stick/\",\n    status: \"Incomplete\", \n    done: \"not\" \n  },\n    {\n      ID: \"6\",\n      Q: \"Subset sum equal to target \",\n      link:\"https://leetcode.com/problems/partition-equal-subset-sum/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    { ID: \"7\", \n    Q: \"Coin Change 2\", \n    link:\"https://leetcode.com/problems/coin-change/\",\n    status: \"Incomplete\", \n    done: \"not\" \n  },\n    {\n      ID: \"8\",\n      Q: \"Minimum Path Sum In a Grid\",\n      link:\"https://leetcode.com/problems/minimum-path-sum/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"9\",\n      Q: \"Longest Increasing Subsequence\",\n      link:\"https://leetcode.com/problems/longest-increasing-subsequence/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+10\",\n      Q: \"Maximum sum increasing subsequence\",\n      link:\"https://practice.geeksforgeeks.org/problems/maximum-sum-increasing-subsequence4749/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+11\",\n      Q: \"Matrix Chain Multiplication\",\n      link:\"https://practice.geeksforgeeks.org/problems/matrix-chain-multiplication0303/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+12\",\n      Q: \"Minimum sum path in the matrix, (count paths and similar type do, also backtrack to find the Minimum path)\",\n      link:\"https://leetcode.com/problems/minimum-path-sum/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"+13\",\n      Q: \"Maximum profit in Job scheduling\",\n      link:\"https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\n\n  const Bsq = [\n    {\n      ID: \"1\",\n      Q: \"Nth Root of a Number using Binary Search\", \n      link:\"https://bit.ly/3rj7Ib1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      Q: \"Search Single Element in a sorted array\", \n      link:\"https://leetcode.com/problems/single-element-in-a-sorted-array/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"3\",\n      Q: \"Search Element in a Rotated Sorted Array\", \n      link:\"https://leetcode.com/problems/search-in-rotated-sorted-array/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"4\",\n      Q: \"Median of Two Sorted Arrays of different sizes\", \n      link:\"https://leetcode.com/problems/median-of-two-sorted-arrays/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      Q: \"K-th Element of two sorted arrays\", \n      link:\"https://practice.geeksforgeeks.org/problems/k-th-element-of-two-sorted-array1317/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"6\",\n      Q: \"Allocate Minimum Number of Pages\", \n      link:\"https://www.interviewbit.com/problems/allocate-books/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    { ID: \"7\", \n    Q: \"Aggressive Cows\",  \n    link:\"https://www.spoj.com/problems/AGGRCOW/\",\n    status: \"Incomplete\", \n    done: \"not\" },\n  ];\n\n  const heapq = [\n    {\n      ID: \"1\",\n      Q: \"Maximum Sum Combination\",\n      link: \"https://www.interviewbit.com/problems/maximum-sum-combinations/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      Q: \"Kth Largest Element\",\n      link: \"https://leetcode.com/problems/kth-largest-element-in-an-array/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"3\",\n      Q: \"Top K frequent elements\",\n      link: \"https://leetcode.com/problems/top-k-frequent-elements/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"4\",\n      Q: \"Merge K sorted arrays\",\n      link: \"https://www.codingninjas.com/codestudio/problems/merge-k-sorted-arrays_975379\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      Q: \"Find Median from Data Stream\",\n      link: \"https://leetcode.com/problems/find-median-from-data-stream/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\n\n  const recursionq = [\n    {\n      ID: \"1\",\n      Q: \"Subset Sum : Sum of all Subsets\",\n      link: \"https://practice.geeksforgeeks.org/problems/subset-sums2234/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      Q: \"Subset – II | Print all the Unique Subsets\",\n      link: \"https://leetcode.com/problems/subsets-ii/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"3\",\n      Q: \"Combination Sum – 1\",\n      link: \"https://leetcode.com/problems/combination-sum/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"4\",\n      Q: \"Combination Sum II – Find all unique combinations\",\n      link: \"https://leetcode.com/problems/combination-sum-ii/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      Q: \"Palindrome Partitioning\",\n      link: \"https://leetcode.com/problems/palindrome-partitioning/\",\n\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"6\",\n      Q: \"Find K-th Permutation Sequence\",\n      link: \"https://leetcode.com/problems/permutation-sequence/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\n\n  const llq = [\n    {\n      ID: \"1\",\n      Q: \"Check if given Linked List is Plaindrome\",\n      link: \"https://leetcode.com/problems/palindrome-linked-list/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      Q: \"Reverse Linked List in groups of Size K\",\n      link: \"https://leetcode.com/problems/reverse-nodes-in-k-group/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"3\",\n      Q: \"Detect a Cycle in a Linked List\",\n      link: \"https://leetcode.com/problems/linked-list-cycle/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"4\",\n      Q: \"Find intersection of Two Linked Lists\",\n      link: \"https://leetcode.com/problems/intersection-of-two-linked-lists/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      Q: \"Starting point of loop in a Linked List\",\n      link: \"https://leetcode.com/problems/linked-list-cycle-ii/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"6\",\n      Q: \"Flattening a Linked List\",\n      link: \"https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"7\",\n      Q: \"Merge two sorted Linked Lists\",\n      link: \"https://leetcode.com/problems/merge-two-sorted-lists/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"8\",\n      Q: \"Remove N-th node from the end of a Linked List\",\n      link: \"https://leetcode.com/problems/remove-nth-node-from-end-of-list/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\n\n  const Btq = [\n    {\n      ID: \"1\",\n      Q: \"Level Order Traversal of a Binary Tree\",\n      link: \"https://leetcode.com/problems/binary-tree-level-order-traversal/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      link: \"https://leetcode.com/problems/maximum-depth-of-binary-tree/\",\n      Q: \"Maximum depth of a Binary Tree\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"3\",\n      link: \"https://leetcode.com/problems/diameter-of-binary-tree/\",\n      Q: \"Calculate the Diameter of a Binary Tree\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"4\",\n      link: \"https://leetcode.com/problems/balanced-binary-tree/\",\n      Q: \"Check if the Binary Tree is Balanced Binary Tree\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      link: \"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/\",\n      Q: \"Lowest Common Ancestor for two given Nodes\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"6\",\n      link: \"https://leetcode.com/problems/same-tree/\",\n      Q: \"Check if two trees are identical\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"7\",\n      link: \"https://leetcode.com/problems/boundary-of-binary-tree/#\",\n      Q: \"Boundary Traversal of a Binary Tree\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"8\",\n      link: \"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/\",\n      Q: \"Zig Zag Traversal Of Binary Tree\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\n\n  const Bstq = [\n    {\n      ID: \"1\",\n      Q: \"Size of the largest BST in a Binary Tree\",\n      link:\"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      Q: \"Find a pair with a given sum in BST\",\n      link:\"https://leetcode.com/problems/two-sum-iv-input-is-a-bst/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"3\",\n      Q: \"Populate Next Right pointers of Tree\",\n      link:\"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"4\",\n      Q: \"Find LCA of two nodes in BST\",\n      link:\"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      Q: \"Find the inorder predecessor/successor of a given Key in BST.\",\n      link:\"https://practice.geeksforgeeks.org/problems/predecessor-and-successor/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"6\",\n      Q: \"Kth largest element in Binary Search Tree\",\n      link:\"https://practice.geeksforgeeks.org/problems/kth-largest-element-in-bst/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\n\n  const Sqtq = [\n    {\n      ID: \"1\",\n      Q: \"Implement Min Stack : O(2N) and O(N) Space Complexity\",\n      link: \"https://leetcode.com/problems/min-stack/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      Q: \"Sliding Window Maximum\",\n      link: \"https://leetcode.com/problems/sliding-window-maximum/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"3\",\n      Q: \"Area of largest rectangle in Histogram\",\n      link: \"https://leetcode.com/problems/largest-rectangle-in-histogram/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"4\",\n      Q: \"Implement LRU Cache\",\n      link: \"https://leetcode.com/problems/lru-cache/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      Q: \"Implement Stack using single Queue\",\n      link: \"https://leetcode.com/problems/implement-stack-using-queues/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"6\",\n      Q: \"Check for Balanced Parentheses\",\n      link: \"https://leetcode.com/problems/valid-parentheses/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"7\",\n      Q: \"Next Greater Element Using Stack\",\n      link: \"https://leetcode.com/problems/next-greater-element-ii/description/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\n\n  const Backtrackingq = [\n    {\n      ID: \"1\",\n      Q: \"Rat in a Maze\",\n      link: \"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"2\",\n      Q: \"M – Coloring Problem\",\n      link: \"https://practice.geeksforgeeks.org/problems/m-coloring-problem-1587115620/1#\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"3\",\n      Q: \"Sudoku Solver\",\n      link: \"https://leetcode.com/problems/sudoku-solver/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"4\",\n      Q: \"N Queen Problem | Return all Distinct Solutions to the N-Queens Puzzle\",\n      link: \"https://leetcode.com/problems/n-queens/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"5\",\n      Q: \"Print All Permutations of a String/Array\",\n      link: \"https://leetcode.com/problems/permutations/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"6\",\n      Q: \"Word Break (print all ways)\",\n      link: \"https://bit.ly/3FxgW92\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\n\n  const Graphq = [\n    {\n      ID: \"1\",\n      Q: \"Detect Cycle in an Undirected Graph (using BFS)\", \n      link:\"https://leetcode.com/problems/course-schedule/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    { ID: \"2\", \n    Q: \"Topological Sort (BFS)\",  \n    link:\"https://practice.geeksforgeeks.org/problems/topological-sort/1\",\n    status: \"Incomplete\", \n    done: \"not\" \n  },\n    {\n      ID: \"3\",\n      Q: \"Number of Distinct Islands\", \n      link:\"https://leetcode.com/problems/number-of-islands/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    { ID: \"4\", \n    Q: \"Bipartite Graph \",  \n    link:\"https://leetcode.com/problems/is-graph-bipartite/\",\n    status: \"Incomplete\", \n    done: \"not\" \n  },\n    {\n      ID: \"5\",\n      Q: \"Detect a Cycle in Directed Graph | Topological Sort | Kahn’s Algorithm \", \n      link:\"https://leetcode.com/problems/course-schedule/\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n    {\n      ID: \"6\",\n      Q: \"Print Shortest Path – Dijkstra’s Algorithm\", \n      link:\"https://practice.geeksforgeeks.org/problems/implementing-dijkstra-set-1-adjacency-matrix/1\",\n      status: \"Incomplete\",\n      done: \"not\",\n    },\n  ];\nconst [count, setcount] = useState(0);\n  \n\n\n  return (\n    <> \n   \n      <Router>\n        <Navbar mode={mode} setmode={setmode}/>\n        <Routes> \n          <Route\n            exact\n            path=\"\"\n            element={\n              count<=99?\n              <Lister\n                setprogress={setprogress}\n                progress={progress}\n                Checked12={Checked12}\n                Checked1={Checked1}\n                Checked2={Checked2}\n                Checked3={Checked3}\n                Checked4={Checked4}\n                Checked5={Checked5}\n                Checked6={Checked6}\n                Checked7={Checked7}\n                Checked8={Checked8}\n                Checked9={Checked9}\n                Checked10={Checked10}\n                Checked11={Checked11}\n                // Checked10={Checked5}\n                count={count}\n                setcount={setcount}\n                name=\"Array\"\n                mode={mode}\n              />:\n              <Completer/>\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Array and string\"\n            element={\n              <Questions\n                Checked={Checked12}\n                no={\"12\"}\n                setChecked={setChecked12}\n                mode={mode}\n                qlist={arrayq}\n                name=\"Array\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Greedy\"\n            element={\n              <Questions\n                Checked={Checked1}\n                no={\"1\"}\n                setChecked={setChecked1}\n                mode={mode}\n                qlist={greedyq}\n                name=\"Greedy\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Dp\"\n            element={\n              <Questions\n                Checked={Checked2}\n                no={\"2\"}\n                setChecked={setChecked2}\n                mode={mode}\n                qlist={dpq}\n                name=\"Dp\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Binary search\"\n            element={\n              <Questions\n                Checked={Checked3}\n                no={\"3\"}\n                setChecked={setChecked3}\n                mode={mode}\n                qlist={Bsq}\n                name=\"Binary Search\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Heaps\"\n            element={\n              <Questions\n                Checked={Checked4}\n                no={\"4\"}\n                setChecked={setChecked4}\n                mode={mode}\n                qlist={heapq}\n                name=\"Heap\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Recursion\"\n            element={\n              <Questions\n                Checked={Checked5}\n                no={\"5\"}\n                setChecked={setChecked5}\n                mode={mode}\n                qlist={recursionq}\n                name=\"Recursion\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Linked list\"\n            element={\n              <Questions\n                Checked={Checked6}\n                no={\"6\"}\n                setChecked={setChecked6}\n                mode={mode}\n                qlist={llq}\n                name=\"Linked List\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Binary Tree\"\n            element={\n              <Questions\n                Checked={Checked7}\n                no={\"7\"}\n                setChecked={setChecked7}\n                mode={mode}\n                qlist={Btq}\n                name=\"Binary Tree\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Binary Search Tree\"\n            element={\n              <Questions\n                Checked={Checked8}\n                no={\"8\"}\n                setChecked={setChecked8}\n                mode={mode}\n                qlist={Bstq}\n                name=\"Binary Search Tree\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Stack and Queue\"\n            element={\n              <Questions\n                Checked={Checked9}\n                no={\"9\"}\n                setChecked={setChecked9}\n                mode={mode}\n                qlist={Sqtq}\n                name=\"Stack and Queue\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Backtracking\"\n            element={\n              <Questions\n                Checked={Checked10}\n                no={\"10\"}\n                setChecked={setChecked10}\n                mode={mode}\n                qlist={Backtrackingq}\n                name=\"Backtracking\"\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Graphs\"\n            element={\n              <Questions\n                Checked={Checked11}\n                no={\"11\"}\n                setChecked={setChecked11}\n                mode={mode}\n                qlist={Graphq}\n                name=\"Graphs\"\n              />\n            }\n          ></Route>\n           {/* <Route\n            exact\n            path=\"/String\"\n            element={\n              <Questions\n                Checked={Checked13}\n                no={\"13\"}\n                setChecked={setChecked13}\n                mode={mode}\n                qlist={stringq}\n                name=\"String\"\n              />\n            }\n          ></Route> */}\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,aAAa,IAAIC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/E,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACsC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;;EAEhD;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEE,MAAMwC,MAAM,GAAG,CACb;IACEC,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,8BAA8B;IACjCC,IAAI,EAAE,mDAAmD;IACzDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,+EAA+E;IAClFC,IAAI,EAAE,6CAA6C;IACnDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,0DAA0D;IAC7DC,IAAI,EAAE,wCAAwC;IAC9CC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,0CAA0C;IAC7CC,IAAI,EAAE,6DAA6D;IACnEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,8CAA8C;IACjDC,IAAI,EAAE,2EAA2E;IACjFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,6DAA6D;IAChEC,IAAI,EAAE,+EAA+E;IACrFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,gDAAgD;IACnDC,IAAI,EAAE,gEAAgE;IACtEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,iCAAiC;IACpCC,IAAI,EAAE,gDAAgD;IACtDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,6CAA6C;IAChDC,IAAI,EAAE,mDAAmD;IACzDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,uCAAuC;IAC1CC,IAAI,EAAE,iDAAiD;IACvDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,oEAAoE;IACvEC,IAAI,EAAE,iDAAiD;IACvDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,uDAAuD;IAC1DC,IAAI,EAAE,iDAAiD;IACvDE,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,gCAAgC;IACnCC,IAAI,EAAE,4CAA4C;IAClDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,mBAAmB;IACtBC,IAAI,EAAE,6CAA6C;IACnDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,eAAe;IAClBC,IAAI,EAAE,8CAA8C;IACpDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,yCAAyC;IAC5CC,IAAI,EAAE,uCAAuC;IAC7CC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,eAAe;IAClBC,IAAI,EAAE,qCAAqC;IAC3CC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,sBAAsB;IACzBC,IAAI,EAAE,qDAAqD;IAC3DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,2BAA2B;IAC9BC,IAAI,EAAC,0DAA0D;IAC/DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,gCAAgC;IACnCC,IAAI,EAAC,8DAA8D;IACnEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,uBAAuB;IAC1BC,IAAI,EAAC,sDAAsD;IAC3DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,kFAAkF;IACrFC,IAAI,EAAC,kIAAkI;IACvIC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,oBAAoB;IACvBC,IAAI,EAAC,8CAA8C;IACnDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACD;EAEF,MAAMC,OAAO,GAAG,CACd;IAAEL,EAAE,EAAE,GAAG;IACTC,CAAC,EAAE,wBAAwB;IAC3BC,IAAI,EAAC,iFAAiF;IACtFC,MAAM,EAAE,YAAY;IACnBC,IAAI,EAAE;EAAM,CAAC,EACd;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,oDAAoD;IACvDC,IAAI,EAAC,6EAA6E;IAClFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IAAEJ,EAAE,EAAE,GAAG;IACTC,CAAC,EAAE,wBAAwB;IAC3BC,IAAI,EAAC,kFAAkF;IACvFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EAAM,CAAC,EACb;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,6BAA6B;IAChCC,IAAI,EAAC,8EAA8E;IACnFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,8BAA8B;IACjCC,IAAI,EAAC,gFAAgF;IACrFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAME,GAAG,GAAG,CACV;IACEN,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,sCAAsC;IACzCC,IAAI,EAAC,yDAAyD;IAC9DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,8BAA8B;IACjCC,IAAI,EAAC,+DAA+D;IACpEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IAAEJ,EAAE,EAAE,GAAG;IACTC,CAAC,EAAE,eAAe;IAClBC,IAAI,EAAC,wEAAwE;IAC7EC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACC;IAAEJ,EAAE,EAAE,GAAG;IACTC,CAAC,EAAE,eAAe;IAClBC,IAAI,EAAC,8CAA8C;IAClDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACN,CAAC,EACF;IAAEJ,EAAE,EAAE,GAAG;IACTC,CAAC,EAAE,qBAAqB;IACxBC,IAAI,EAAC,4DAA4D;IACjEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACC;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,6BAA6B;IAChCC,IAAI,EAAC,2DAA2D;IAChEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IAAEJ,EAAE,EAAE,GAAG;IACTC,CAAC,EAAE,eAAe;IAClBC,IAAI,EAAC,4CAA4C;IACjDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACC;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,4BAA4B;IAC/BC,IAAI,EAAC,iDAAiD;IACtDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,gCAAgC;IACnCC,IAAI,EAAC,+DAA+D;IACpEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,oCAAoC;IACvCC,IAAI,EAAC,sFAAsF;IAC3FC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,6BAA6B;IAChCC,IAAI,EAAC,+EAA+E;IACpFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,4GAA4G;IAC/GC,IAAI,EAAC,iDAAiD;IACtDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,KAAK;IACTC,CAAC,EAAE,kCAAkC;IACrCC,IAAI,EAAC,iFAAiF;IACtFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMG,GAAG,GAAG,CACV;IACEP,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,0CAA0C;IAC7CC,IAAI,EAAC,wBAAwB;IAC7BC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,yCAAyC;IAC5CC,IAAI,EAAC,iEAAiE;IACtEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,0CAA0C;IAC7CC,IAAI,EAAC,+DAA+D;IACpEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,gDAAgD;IACnDC,IAAI,EAAC,4DAA4D;IACjEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,mCAAmC;IACtCC,IAAI,EAAC,oFAAoF;IACzFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,kCAAkC;IACrCC,IAAI,EAAC,uDAAuD;IAC5DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IAAEJ,EAAE,EAAE,GAAG;IACTC,CAAC,EAAE,iBAAiB;IACpBC,IAAI,EAAC,wCAAwC;IAC7CC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EAAM,CAAC,CACd;EAED,MAAMI,KAAK,GAAG,CACZ;IACER,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,yBAAyB;IAC5BC,IAAI,EAAE,iEAAiE;IACvEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,qBAAqB;IACxBC,IAAI,EAAE,gEAAgE;IACtEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,yBAAyB;IAC5BC,IAAI,EAAE,wDAAwD;IAC9DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,uBAAuB;IAC1BC,IAAI,EAAE,+EAA+E;IACrFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,8BAA8B;IACjCC,IAAI,EAAE,6DAA6D;IACnEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMK,UAAU,GAAG,CACjB;IACET,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,iCAAiC;IACpCC,IAAI,EAAE,+DAA+D;IACrEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,4CAA4C;IAC/CC,IAAI,EAAE,2CAA2C;IACjDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,qBAAqB;IACxBC,IAAI,EAAE,gDAAgD;IACtDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,mDAAmD;IACtDC,IAAI,EAAE,mDAAmD;IACzDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,yBAAyB;IAC5BC,IAAI,EAAE,wDAAwD;IAE9DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,gCAAgC;IACnCC,IAAI,EAAE,qDAAqD;IAC3DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMM,GAAG,GAAG,CACV;IACEV,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,0CAA0C;IAC7CC,IAAI,EAAE,uDAAuD;IAC7DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,yCAAyC;IAC5CC,IAAI,EAAE,yDAAyD;IAC/DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,iCAAiC;IACpCC,IAAI,EAAE,kDAAkD;IACxDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,uCAAuC;IAC1CC,IAAI,EAAE,iEAAiE;IACvEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,yCAAyC;IAC5CC,IAAI,EAAE,qDAAqD;IAC3DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,0BAA0B;IAC7BC,IAAI,EAAE,wEAAwE;IAC9EC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,+BAA+B;IAClCC,IAAI,EAAE,uDAAuD;IAC7DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,gDAAgD;IACnDC,IAAI,EAAE,iEAAiE;IACvEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMO,GAAG,GAAG,CACV;IACEX,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,wCAAwC;IAC3CC,IAAI,EAAE,kEAAkE;IACxEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPE,IAAI,EAAE,6DAA6D;IACnED,CAAC,EAAE,gCAAgC;IACnCE,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPE,IAAI,EAAE,wDAAwD;IAC9DD,CAAC,EAAE,yCAAyC;IAC5CE,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPE,IAAI,EAAE,qDAAqD;IAC3DD,CAAC,EAAE,kDAAkD;IACrDE,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPE,IAAI,EAAE,wEAAwE;IAC9ED,CAAC,EAAE,4CAA4C;IAC/CE,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPE,IAAI,EAAE,0CAA0C;IAChDD,CAAC,EAAE,kCAAkC;IACrCE,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPE,IAAI,EAAE,yDAAyD;IAC/DD,CAAC,EAAE,qCAAqC;IACxCE,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPE,IAAI,EAAE,yEAAyE;IAC/ED,CAAC,EAAE,kCAAkC;IACrCE,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMQ,IAAI,GAAG,CACX;IACEZ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,0CAA0C;IAC7CC,IAAI,EAAC,+DAA+D;IACpEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,qCAAqC;IACxCC,IAAI,EAAC,0DAA0D;IAC/DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,sCAAsC;IACzCC,IAAI,EAAC,4EAA4E;IACjFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,8BAA8B;IACjCC,IAAI,EAAC,+EAA+E;IACpFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,+DAA+D;IAClEC,IAAI,EAAC,yEAAyE;IAC9EC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,2CAA2C;IAC9CC,IAAI,EAAC,0EAA0E;IAC/EC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMS,IAAI,GAAG,CACX;IACEb,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,uDAAuD;IAC1DC,IAAI,EAAE,0CAA0C;IAChDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,wBAAwB;IAC3BC,IAAI,EAAE,uDAAuD;IAC7DC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,wCAAwC;IAC3CC,IAAI,EAAE,+DAA+D;IACrEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,qBAAqB;IACxBC,IAAI,EAAE,0CAA0C;IAChDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,oCAAoC;IACvCC,IAAI,EAAE,6DAA6D;IACnEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,gCAAgC;IACnCC,IAAI,EAAE,kDAAkD;IACxDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,kCAAkC;IACrCC,IAAI,EAAE,oEAAoE;IAC1EC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMU,aAAa,GAAG,CACpB;IACEd,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,eAAe;IAClBC,IAAI,EAAE,qEAAqE;IAC3EC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,sBAAsB;IACzBC,IAAI,EAAE,8EAA8E;IACpFC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,eAAe;IAClBC,IAAI,EAAE,8CAA8C;IACpDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,wEAAwE;IAC3EC,IAAI,EAAE,yCAAyC;IAC/CC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,0CAA0C;IAC7CC,IAAI,EAAE,6CAA6C;IACnDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,6BAA6B;IAChCC,IAAI,EAAE,wBAAwB;IAC9BC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMW,MAAM,GAAG,CACb;IACEf,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,iDAAiD;IACpDC,IAAI,EAAC,gDAAgD;IACrDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IAAEJ,EAAE,EAAE,GAAG;IACTC,CAAC,EAAE,wBAAwB;IAC3BC,IAAI,EAAC,gEAAgE;IACrEC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACC;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,4BAA4B;IAC/BC,IAAI,EAAC,kDAAkD;IACvDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IAAEJ,EAAE,EAAE,GAAG;IACTC,CAAC,EAAE,kBAAkB;IACrBC,IAAI,EAAC,mDAAmD;IACxDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACC;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,yEAAyE;IAC5EC,IAAI,EAAC,gDAAgD;IACrDC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,4CAA4C;IAC/CC,IAAI,EAAC,4FAA4F;IACjGC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EACH,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC;EAInC,oBACEK,OAAA,CAAAE,SAAA;IAAAoD,QAAA,eAEEtD,OAAA,CAACT,MAAM;MAAA+D,QAAA,gBACLtD,OAAA,CAACX,MAAM;QAACgB,IAAI,EAAEA,IAAK;QAACC,OAAO,EAAEA;MAAQ;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACvC1D,OAAA,CAACP,MAAM;QAAA6D,QAAA,gBACLtD,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,EAAE;UACPC,OAAO,EACLT,KAAK,IAAE,EAAE,gBACTpD,OAAA,CAACb,MAAM;YACL6C,WAAW,EAAEA,WAAY;YACzBD,QAAQ,EAAEA,QAAS;YACnBxB,SAAS,EAAEA,SAAU;YACrBE,QAAQ,EAAEA,QAAS;YACnBE,QAAQ,EAAEA,QAAS;YACnBE,QAAQ,EAAEA,QAAS;YACnBE,QAAQ,EAAEA,QAAS;YACnBE,QAAQ,EAAEA,QAAS;YACnBE,QAAQ,EAAEA,QAAS;YACnBE,QAAQ,EAAEA,QAAS;YACnBE,QAAQ,EAAEA,QAAS;YACnBE,QAAQ,EAAEA,QAAS;YACnBE,SAAS,EAAEA,SAAU;YACrBE,SAAS,EAAEA;YACX;YAAA;YACAuB,KAAK,EAAEA,KAAM;YACbC,QAAQ,EAAEA,QAAS;YACnBS,IAAI,EAAC,OAAO;YACZzD,IAAI,EAAEA;UAAK;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACX,gBACF1D,OAAA,CAACF,SAAS;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACX;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,mBAAmB;UACxBC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAExD,SAAU;YACnByD,EAAE,EAAE,IAAK;YACTC,UAAU,EAAEzD,YAAa;YACzBH,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAE/B,MAAO;YACd2B,IAAI,EAAC;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEf;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,SAAS;UACdC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAEtD,QAAS;YAClBuD,EAAE,EAAE,GAAI;YACRC,UAAU,EAAEvD,WAAY;YACxBL,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAEzB,OAAQ;YACfqB,IAAI,EAAC;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEhB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,KAAK;UACVC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAEpD,QAAS;YAClBqD,EAAE,EAAE,GAAI;YACRC,UAAU,EAAErD,WAAY;YACxBP,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAExB,GAAI;YACXoB,IAAI,EAAC;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEZ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,gBAAgB;UACrBC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAElD,QAAS;YAClBmD,EAAE,EAAE,GAAI;YACRC,UAAU,EAAEnD,WAAY;YACxBT,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAEvB,GAAI;YACXmB,IAAI,EAAC;UAAe;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEvB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,QAAQ;UACbC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAEhD,QAAS;YAClBiD,EAAE,EAAE,GAAI;YACRC,UAAU,EAAEjD,WAAY;YACxBX,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAEtB,KAAM;YACbkB,IAAI,EAAC;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEd;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,YAAY;UACjBC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAE9C,QAAS;YAClB+C,EAAE,EAAE,GAAI;YACRC,UAAU,EAAE/C,WAAY;YACxBb,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAErB,UAAW;YAClBiB,IAAI,EAAC;UAAW;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEnB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,cAAc;UACnBC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAE5C,QAAS;YAClB6C,EAAE,EAAE,GAAI;YACRC,UAAU,EAAE7C,WAAY;YACxBf,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAEpB,GAAI;YACXgB,IAAI,EAAC;UAAa;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAErB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,cAAc;UACnBC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAE1C,QAAS;YAClB2C,EAAE,EAAE,GAAI;YACRC,UAAU,EAAE3C,WAAY;YACxBjB,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAEnB,GAAI;YACXe,IAAI,EAAC;UAAa;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAErB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,qBAAqB;UAC1BC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAExC,QAAS;YAClByC,EAAE,EAAE,GAAI;YACRC,UAAU,EAAEzC,WAAY;YACxBnB,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAElB,IAAK;YACZc,IAAI,EAAC;UAAoB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAE5B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,kBAAkB;UACvBC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAEtC,QAAS;YAClBuC,EAAE,EAAE,GAAI;YACRC,UAAU,EAAEvC,WAAY;YACxBrB,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAEjB,IAAK;YACZa,IAAI,EAAC;UAAiB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEzB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,eAAe;UACpBC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAEpC,SAAU;YACnBqC,EAAE,EAAE,IAAK;YACTC,UAAU,EAAErC,YAAa;YACzBvB,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAEhB,aAAc;YACrBY,IAAI,EAAC;UAAc;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEtB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,eAET1D,OAAA,CAACN,KAAK;UACJiE,KAAK;UACLC,IAAI,EAAC,SAAS;UACdC,OAAO,eACL7D,OAAA,CAACZ,SAAS;YACR2E,OAAO,EAAElC,SAAU;YACnBmC,EAAE,EAAE,IAAK;YACTC,UAAU,EAAEnC,YAAa;YACzBzB,IAAI,EAAEA,IAAK;YACX6D,KAAK,EAAEf,MAAO;YACdW,IAAI,EAAC;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEhB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAeF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACR;AAEP;AAACtD,EAAA,CA/9BQD,GAAG;AAAAgE,EAAA,GAAHhE,GAAG;AAi+BZ,eAAeA,GAAG;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
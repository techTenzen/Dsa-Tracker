'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var DeterminateLoader = function (_React$Component) {
  inherits(DeterminateLoader, _React$Component);

  function DeterminateLoader() {
    classCallCheck(this, DeterminateLoader);
    return possibleConstructorReturn(this, (DeterminateLoader.__proto__ || Object.getPrototypeOf(DeterminateLoader)).apply(this, arguments));
  }

  createClass(DeterminateLoader, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          fixed = _props.fixed,
          backgroundColor = _props.backgroundColor,
          thickness = _props.thickness,
          style = _props.style,
          duration = _props.duration,
          progress = _props.progress,
          progressDuration = _props.progressDuration,
          color = _props.color,
          zIndex = _props.zIndex,
          rest = objectWithoutProperties(_props, ["fixed", "backgroundColor", "thickness", "style", "duration", "progress", "progressDuration", "color", "zIndex"]);

      return React.createElement(
        "div",
        _extends({
          style: _extends({
            position: fixed ? "fixed" : "static",
            top: fixed ? 0 : undefined,
            left: fixed ? 0 : undefined,
            right: fixed ? 0 : undefined,
            overflow: "hidden",
            width: "100%",
            height: thickness,
            backgroundColor: backgroundColor,
            zIndex: zIndex
          }, style)
        }, rest),
        React.createElement("div", {
          style: {
            width: progress * 100 + "%",
            position: "relative",
            maxWidth: "100%",
            height: "100%",
            backgroundColor: color,
            transition: "width " + progressDuration + "ms linear",
            zIndex: zIndex + 1
          }
        })
      );
    }
  }]);
  return DeterminateLoader;
}(React.Component);

var IndeterminateLoader = function (_React$Component2) {
  inherits(IndeterminateLoader, _React$Component2);

  function IndeterminateLoader() {
    var _ref;

    var _temp, _this2, _ret;

    classCallCheck(this, IndeterminateLoader);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this2 = possibleConstructorReturn(this, (_ref = IndeterminateLoader.__proto__ || Object.getPrototypeOf(IndeterminateLoader)).call.apply(_ref, [this].concat(args))), _this2), _this2.state = {
      visible: false,
      loading: false
    }, _this2.isIndeterminate = function () {
      return _this2.props.progress === undefined || _this2.props.progerss === null;
    }, _this2.loop = function () {
      _this2.setState({ loading: true }, function () {
        return setTimeout(function () {
          return _this2.setState({ loading: false });
        }, _this2.props.duration);
      });
    }, _this2.setupLoop = function () {
      return setTimeout(function () {
        return _this2.setState({ visible: true }, function () {
          _this2.loop();
          _this2.interval = setInterval(_this2.loop, _this2.props.duration + 100);
        });
      }, _this2.props.delay);
    }, _temp), possibleConstructorReturn(_this2, _ret);
  }

  createClass(IndeterminateLoader, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setupLoop();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearInterval(this.interval);
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          progress = _props2.progress,
          color = _props2.color,
          backgroundColor = _props2.backgroundColor,
          thickness = _props2.thickness,
          duration = _props2.duration,
          progressDuration = _props2.progressDuration,
          fixed = _props2.fixed,
          style = _props2.style,
          zIndex = _props2.zIndex,
          rest = objectWithoutProperties(_props2, ["progress", "color", "backgroundColor", "thickness", "duration", "progressDuration", "fixed", "style", "zIndex"]);
      var _state = this.state,
          loading = _state.loading,
          visible = _state.visible;

      return !visible ? null : React.createElement(
        "div",
        _extends({
          style: _extends({
            position: fixed ? "fixed" : "static",
            top: fixed ? 0 : undefined,
            left: fixed ? 0 : undefined,
            right: fixed ? 0 : undefined,
            overflow: "hidden",
            width: "100%",
            height: thickness,
            backgroundColor: backgroundColor,
            zIndex: zIndex
          }, style)
        }, rest),
        React.createElement(
          "div",
          {
            style: {
              position: "relative",
              width: "100%",
              height: "100%",
              zIndex: zIndex + 1
            }
          },
          React.createElement("div", {
            style: {
              content: "",
              position: "absolute",
              height: "100%",
              backgroundColor: color,
              transition: loading ? "left " + duration + "ms ease-out, width " + duration + "ms ease-out" : "none",
              left: loading ? "100%" : "-100%",
              width: loading ? "10%" : "100%",
              zIndex: zIndex + 2
            }
          })
        )
      );
    }
  }]);
  return IndeterminateLoader;
}(React.Component);

var TopLoader = function (_React$Component3) {
  inherits(TopLoader, _React$Component3);

  function TopLoader() {
    classCallCheck(this, TopLoader);
    return possibleConstructorReturn(this, (TopLoader.__proto__ || Object.getPrototypeOf(TopLoader)).apply(this, arguments));
  }

  createClass(TopLoader, [{
    key: "render",
    value: function render() {
      var _props3 = this.props,
          show = _props3.show,
          rest = objectWithoutProperties(_props3, ["show"]);

      if (!show) {
        return null;
      }
      if (rest.progress === undefined || rest.progress === null) {
        return React.createElement(IndeterminateLoader, rest);
      } else {
        return React.createElement(DeterminateLoader, rest);
      }
    }
  }]);
  return TopLoader;
}(React.Component);

TopLoader.defaultProps = {
  show: false,
  duration: 1500,
  progressDuration: 100,
  thickness: 2,
  color: "#03a9f4",
  backgroundColor: "transparent",
  fixed: true,
  delay: 0,
  zIndex: 10000
};

module.exports = TopLoader;
//# sourceMappingURL=index.js.map
